name: .NET build

on:
  workflow_dispatch:

  push:
    branches:
      - dev
      - master
      - release/*
      - main
  pull_request:
    branches:
      - dev
      - master
      - release/*
      - main

env:
  DOTNET_NOLOGO: true
  dotnet-version-to-install: '8.*'
  dotnet-quality: 'preview'
  artifact-name: "build-${{ github.sha }}"
  clientapp-dir: "./src/PaperMalKing/ClientApp"
  node-version: '19.x'
  pnpm-version: "8.3.0"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      output-dir: "./output"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Install .NET SDK if needed
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version-to-install }}
          dotnet-quality: ${{ env.dotnet-quality}}
          
      - name: Set Node.js 19.x
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }} 
                  
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.pnpm-version }}  
    
      - name: Install deps
        run: dotnet restore

      - name: Build projects
        run: dotnet build ./src/PaperMalKing/PaperMalKing.csproj --configuration Release --no-restore --output ${{ env.output-dir }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact-name }}
          path: ${{ env.output-dir }}
          if-no-files-found: error
          retention-days: 1

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET SDK if needed
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version-to-install }}
          dotnet-quality: ${{ env.dotnet-quality}}

      - name: Test
        run: dotnet test --logger GitHubActions "${t}"

  codeQl:
    name: Run CodeQL analysis
    permissions:
      security-events: write
      actions: read
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET SDK if needed
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet-version-to-install }}
          include-prerelease: ${{ env.dotnet-include-prerelease}}
          
      - name: Set Node.js 19.x
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.pnpm-version }}
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'csharp'
          # queries: +security-and-quality

      - name: Build .NET
        run: dotnet build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  inferSharp:
    name: Run Infer#
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.artifact-name }}

      - run: mkdir ./createdDlls && mv PaperMalKing* createdDlls

      - name: Run Infer#
        id: runInferSharp
        uses: microsoft/infersharpaction@v1.5
        with:
          binary-path: "./createdDlls"

      - name: Upload SARIF output to GitHub Security Center
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: infer-out/report.sarif
